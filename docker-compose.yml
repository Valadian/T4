version: '3.7'
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'

  graphql-engine:
    image: hasura/graphql-engine:latest.cli-migrations-v3
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    volumes:
    - ./hasura-data:/var/lib/hasura/
    - ./hasura-data/migrations:/hasura-migrations
    - ./hasura-data/metadata:/hasura-metadata
    environment:
      ENDPOINT: http://0.0.0.0:8080
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: 'postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres'
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: 'postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres'
      ## disable the console served by server, which creates inconsistent metadata states. For console, use `$> hasura console`.
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_NO_OF_RETRIES: 5
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      HASURA_GRAPHQL_JWT_SECRET: '${HASURA_GRAPHQL_JWT_SECRET}'
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_MATCHMAKER_URL: '${HASURA_MATCHMAKER_URL}'

  matchmaker-service:
    #image: sprintska/matchmaker:v0.1.6-arm
    image: sprintska/matchmaker:v0.1.6-x64
    #ports:
    #- "80:80"
    depends_on:
    - "graphql-engine"
    restart: always
    environment:
      # Matchmaker URL, ex: 'matchmaker.tabletoptournament.tools'
      MATCHMAKER_DOMAIN: '${MATCHMAKER_DOMAIN}'
      # Hasura URL from MM's perspective, ex: 'hasura.tabletoptournament.tools'
      MATCHMAKER_HASURA_URL: '${MATCHMAKER_HASURA_URL}'
      # Hasura admin secret, ex: 'sUpErSeKrIt'
      MATCHMAKER_HASURA_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      # Use HTTP when accessing MM instead of default HTTPS, ex: 1
      MATCHMAKER_INSECURE_USE_HTTP: '${MATCHMAKER_INSECURE_USE_HTTP}'
      # Enable debug-level logging on MM server instead of default info-level, ex: 1
      MATCHMAKER_DEBUG: '${MATCHMAKER_DEBUG}'

volumes:
  db_data: